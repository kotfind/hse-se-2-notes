#import "/utils/math.typ": *

= Введение

$ O_"ДЗ" = 0.2 dot O_"ДЗ 1"+ 0.3 dot O_"ДЗ 2" + 0.5 dot O_"ДЗ 3"  $

$ O_"накоп" = 0.15 dot O_"сем" + 0.15 dot O_"мини ДЗ" + 0.6 dot O_"ДЗ" $

$ O_"экз" in [0; 1] $

$ O_"итог" = match(
    O_"накоп" + O_"экз", "идти на экзамен";
    O_"накоп" \/ 0.9,    "не идти на экзамен";
) $

Лекции относительно независимы

Желательно ходить на все семинары так как будем разрабатывать проекты

Будет три домашних работы

= Парадигмы программирования

"Каждая новая парадигма запрещает нам что-то использовать"

== Инверсия зависимостей

"Модуль верхнего уровня не должен зависеть от модуля нижнего уровня"

Избыточный уровень абстракции запутывает программу

Чтобы разорвать лишние зависимости, можно создать интерфейс: теперь реализации
зависят не друг от друга, а только от интерфейса

Четыре основных принципа ООП:
- Наследование
- Инкапсуляция
- Полиморфизм
- Абстракция
